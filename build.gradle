plugins {
    id "idea"
    id 'application'
    id "org.jetbrains.kotlin.jvm" version "1.3.61"
    id "org.openjfx.javafxplugin" version "0.0.8"
    id "org.beryx.runtime" version "1.8.0"
    id "com.google.osdetector" version "1.6.2"
}

group "info.hildegynoid.study"
version "0.1.0"

repositories {
    mavenCentral()
    jcenter()
}

mainClassName = "info.hildegynoid.study.HelloFX"

ext {
    platform = osdetector.os == 'osx' ? 'mac' : osdetector.os == 'windows' ? 'win' : osdetector.os
    title = "Hello, World!"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}

javafx {
    version = "13"
    modules = ['javafx.controls', 'javafx.fxml']
}

jar {
    dependsOn configurations.runtime
    from {
        (configurations.runtime).collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    manifest {
        attributes(
                'Implementation-Title': title,
                'Implementation-Version': project.version,
                'Main-Class': mainClassName
        )
    }
}

runtime {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    modules = ['java.naming', 'javafx.base', 'javafx.controls', 'javafx.fxml']

    jpackage {
        outputDir = 'installers'
        imageName = 'HelloFX'
        skipInstaller = true
        imageOptions = ['--module-path', System.getenv()['HOME'] + '/javafx-jmods']
//        switch (platform) {
//            case 'mac':
//                imageOptions = ['--icon', "$buildDir/resources/main/icons/appicon.icns"]
//                break
//            case 'win':
//                imageOptions = ['--icon', "$buildDir/resources/main/icons/appicon.ico"]
//                break
//        }
    }
}

task zip(type: Zip, dependsOn: jpackage) {
    archiveFileName = "HelloWorld-v${project.version}-${platform}.zip"
    switch (platform) {
        case 'mac':
            from "build/installers/HelloFX.app"
            into "HelloFX.app"
            break
        case 'win':
            from "build/installers/HelloFX"
            into "HelloFX"
            break
    }
}
